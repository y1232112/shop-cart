{"ast":null,"code":"import * as types from '../constants/actionTypes';\nimport shop from '../apis/shop';\n\nconst receiveSize = size => ({\n  type: types.RECEIVE_SIZE,\n  size\n});\n\nexport const getAllSize = () => dispatch => {\n  shop.getSize(size => {\n    dispatch(receiveSize(size));\n  });\n};\n\nconst receiveProducts = products => ({\n  type: types.RECEIVE_PRODUCTS,\n  products\n});\n\nexport const getAllProducts = () => dispatch => {\n  shop.getProducts(products => {\n    dispatch(receiveProducts(products));\n  });\n};\n\nconst getAvailPrdct = (e, p) => {\n  if (e.target.value === types.SELECT) {\n    return p[0];\n  } else if (e.target.value === types.LOWEST_TO_HIGHEST) {\n    return p[1];\n  } else if (e.target.value === types.HIGHEST_TO_LOWEST) {\n    return p[2];\n  } else return p[0];\n};\n\nconst getSortProduct = (e, p) => ({\n  type: 'SELECT_TYPE',\n  selectChange: e.target.value,\n  avaiProducts: p\n});\n\nexport const onChangedSort = (e, avaiProducts) => dispatch => {\n  dispatch(getSortProduct(e, getAvailPrdct(e, avaiProducts)));\n};\n\nconst toCart = (cartProduct, products) => ({\n  type: types.ADD_TO_CART,\n  cartProduct,\n  currentInventory: --cartProduct.inventory,\n  products\n});\n\nexport const addToCart = (cartProduct, products) => dispatch => {\n  dispatch(toCart(cartProduct, products));\n};","map":{"version":3,"sources":["E:/shopping-cart-app/src/actions/index.js"],"names":["types","shop","receiveSize","size","type","RECEIVE_SIZE","getAllSize","dispatch","getSize","receiveProducts","products","RECEIVE_PRODUCTS","getAllProducts","getProducts","getAvailPrdct","e","p","target","value","SELECT","LOWEST_TO_HIGHEST","HIGHEST_TO_LOWEST","getSortProduct","selectChange","avaiProducts","onChangedSort","toCart","cartProduct","ADD_TO_CART","currentInventory","inventory","addToCart"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAMA,MAAMC,WAAW,GAACC,IAAI,KAAG;AACrBC,EAAAA,IAAI,EAACJ,KAAK,CAACK,YADU;AAErBF,EAAAA;AAFqB,CAAH,CAAtB;;AAIA,OAAO,MAAMG,UAAU,GAAC,MAAIC,QAAQ,IAAE;AAClCN,EAAAA,IAAI,CAACO,OAAL,CACIL,IAAI,IAAE;AACJI,IAAAA,QAAQ,CAACL,WAAW,CAACC,IAAD,CAAZ,CAAR;AACD,GAHL;AAKH,CANM;;AAOP,MAAMM,eAAe,GAACC,QAAQ,KAAG;AAC7BN,EAAAA,IAAI,EAACJ,KAAK,CAACW,gBADkB;AAE7BD,EAAAA;AAF6B,CAAH,CAA9B;;AAIA,OAAO,MAAME,cAAc,GAAC,MAAIL,QAAQ,IAAE;AACtCN,EAAAA,IAAI,CAACY,WAAL,CACIH,QAAQ,IAAE;AACNH,IAAAA,QAAQ,CAACE,eAAe,CAACC,QAAD,CAAhB,CAAR;AACH,GAHL;AAKH,CANM;;AAQN,MAAMI,aAAa,GAAC,CAACC,CAAD,EAAGC,CAAH,KAAO;AACxB,MAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,KAAiBlB,KAAK,CAACmB,MAA1B,EAAiC;AAElC,WAAOH,CAAC,CAAC,CAAD,CAAR;AACE,GAHD,MAII,IAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,KAAiBlB,KAAK,CAACoB,iBAA1B,EAA4C;AAE5C,WAAOJ,CAAC,CAAC,CAAD,CAAR;AACH,GAHG,MAIC,IAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,KAAiBlB,KAAK,CAACqB,iBAA1B,EAA4C;AAC7C,WAAOL,CAAC,CAAC,CAAD,CAAR;AACH,GAFI,MAGA,OAAOA,CAAC,CAAC,CAAD,CAAR;AACR,CAbA;;AAeD,MAAMM,cAAc,GAAC,CAACP,CAAD,EAAGC,CAAH,MAAQ;AAC5BZ,EAAAA,IAAI,EAAC,aADuB;AAE5BmB,EAAAA,YAAY,EAACR,CAAC,CAACE,MAAF,CAASC,KAFM;AAG7BM,EAAAA,YAAY,EAACR;AAHgB,CAAR,CAArB;;AAKA,OAAO,MAAMS,aAAa,GAAC,CAACV,CAAD,EAAGS,YAAH,KAAkBjB,QAAQ,IAAE;AACpDA,EAAAA,QAAQ,CAACe,cAAc,CAACP,CAAD,EAAGD,aAAa,CAACC,CAAD,EAAGS,YAAH,CAAhB,CAAf,CAAR;AACF,CAFM;;AAIP,MAAME,MAAM,GAAC,CAACC,WAAD,EAAajB,QAAb,MAAyB;AAClCN,EAAAA,IAAI,EAACJ,KAAK,CAAC4B,WADuB;AAElCD,EAAAA,WAFkC;AAGlCE,EAAAA,gBAAgB,EAAC,EAAEF,WAAW,CAACG,SAHG;AAIlCpB,EAAAA;AAJkC,CAAzB,CAAb;;AAUA,OAAO,MAAMqB,SAAS,GAAC,CAACJ,WAAD,EAAajB,QAAb,KAAwBH,QAAQ,IAAE;AACtDA,EAAAA,QAAQ,CAACmB,MAAM,CAACC,WAAD,EAAajB,QAAb,CAAP,CAAR;AACF,CAFM","sourcesContent":["import * as types from '../constants/actionTypes';\r\nimport shop from '../apis/shop';\r\n\r\n\r\n\r\n\r\n\r\nconst receiveSize=size=>({\r\n    type:types.RECEIVE_SIZE,\r\n    size\r\n})\r\nexport const getAllSize=()=>dispatch=>{\r\n    shop.getSize(\r\n        size=>{\r\n          dispatch(receiveSize(size))\r\n        }\r\n    )\r\n}\r\nconst receiveProducts=products=>({\r\n    type:types.RECEIVE_PRODUCTS,\r\n    products\r\n})\r\nexport const getAllProducts=()=>dispatch=>{\r\n    shop.getProducts(\r\n        products=>{\r\n            dispatch(receiveProducts(products))\r\n        }\r\n    )\r\n}\r\n\r\n const getAvailPrdct=(e,p)=>{\r\n    if(e.target.value===types.SELECT){\r\n\r\n   return p[0]\r\n    }\r\n   else if(e.target.value===types.LOWEST_TO_HIGHEST){\r\n     \r\n        return p[1]\r\n    }\r\n    else if(e.target.value===types.HIGHEST_TO_LOWEST){\r\n        return p[2]\r\n    }\r\n    else return p[0]\r\n}\r\n\r\nconst getSortProduct=(e,p)=>({\r\n type:'SELECT_TYPE',\r\n selectChange:e.target.value,\r\navaiProducts:p\r\n})\r\nexport const onChangedSort=(e,avaiProducts)=>dispatch=>{\r\n   dispatch(getSortProduct(e,getAvailPrdct(e,avaiProducts)))\r\n}\r\n\r\nconst toCart=(cartProduct,products)=>({\r\n    type:types.ADD_TO_CART,\r\n    cartProduct,\r\n    currentInventory:--cartProduct.inventory,\r\n    products,\r\n  \r\n    \r\n    \r\n})\r\n\r\nexport const addToCart=(cartProduct,products)=>dispatch=>{\r\n   dispatch(toCart(cartProduct,products))\r\n}"]},"metadata":{},"sourceType":"module"}