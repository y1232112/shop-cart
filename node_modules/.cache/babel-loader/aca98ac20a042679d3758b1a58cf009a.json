{"ast":null,"code":"import * as types from '../constants/actionTypes';\nimport shop from '../apis/shop';\n\nconst receiveSize = size => ({\n  type: types.RECEIVE_SIZE,\n  size\n});\n\nexport const getAllSize = () => dispatch => {\n  shop.getSize(size => {\n    dispatch(receiveSize(size));\n  });\n};\n\nconst receiveProducts = products => ({\n  type: types.RECEIVE_PRODUCTS,\n  products\n});\n\nexport const getAllProducts = () => dispatch => {\n  shop.getProducts(products => {\n    dispatch(receiveProducts(products));\n  });\n};\n\nconst getAvailPrdct = (e, p) => {\n  if (e.target.value === types.SELECT) {\n    return p[0];\n  } else if (e.target.value === types.LOWEST_TO_HIGHEST) {\n    return p[1];\n  } else if (e.target.value === types.HIGHEST_TO_LOWEST) {\n    return p[2];\n  } else return p[0];\n};\n\nconst getSortProduct = (e, p) => ({\n  type: 'SELECT_TYPE',\n  selectChange: e.target.value,\n  avaiProducts: p\n});\n\nconst resolveSize = (size, selectSize) => {\n  var initsize = [];\n\n  if (selectSize.length == 0) {\n    initsize.push(size);\n    return initsize;\n  } else {\n    for (var i = 0; i < selectSize.length; i++) {\n      if (size !== selectSize[i]) {\n        initsize.push(selectSize[i]);\n      }\n    }\n\n    return initsize;\n  }\n};\n\nconst getSelectSize = s => ({\n  type: types.SELECT_SIZE,\n  selectSize: s\n});\n\nexport const addSize = (size, selectSize) => dispatch => {\n  dispatch(getSelectSize(size, resolveSize(size, selectSize)));\n};\nexport const onChangedSort = (e, avaiProducts) => dispatch => {\n  dispatch(getSortProduct(e, getAvailPrdct(e, avaiProducts)));\n};\n\nconst toCart = (cartProduct, products) => ({\n  type: types.ADD_TO_CART,\n  cartProduct,\n  currentInventory: --cartProduct.inventory,\n  products\n});\n\nexport const addToCart = (cartProduct, products) => dispatch => {\n  dispatch(toCart(cartProduct, products));\n};","map":{"version":3,"sources":["E:/shopping-cart-app/src/actions/index.js"],"names":["types","shop","receiveSize","size","type","RECEIVE_SIZE","getAllSize","dispatch","getSize","receiveProducts","products","RECEIVE_PRODUCTS","getAllProducts","getProducts","getAvailPrdct","e","p","target","value","SELECT","LOWEST_TO_HIGHEST","HIGHEST_TO_LOWEST","getSortProduct","selectChange","avaiProducts","resolveSize","selectSize","initsize","length","push","i","getSelectSize","s","SELECT_SIZE","addSize","onChangedSort","toCart","cartProduct","ADD_TO_CART","currentInventory","inventory","addToCart"],"mappings":"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","sourcesContent":["import * as types from '../constants/actionTypes';\r\nimport shop from '../apis/shop';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst receiveSize=size=>({\r\n    type:types.RECEIVE_SIZE,\r\n    size\r\n})\r\nexport const getAllSize=()=>dispatch=>{\r\n    shop.getSize(\r\n        size=>{\r\n          dispatch(receiveSize(size))\r\n        }\r\n    )\r\n}\r\nconst receiveProducts=products=>({\r\n    type:types.RECEIVE_PRODUCTS,\r\n    products\r\n})\r\nexport const getAllProducts=()=>dispatch=>{\r\n    shop.getProducts(\r\n        products=>{\r\n            dispatch(receiveProducts(products))\r\n        }\r\n    )\r\n}\r\n\r\n const getAvailPrdct=(e,p)=>{\r\n    if(e.target.value===types.SELECT){\r\n\r\n   return p[0]\r\n    }\r\n   else if(e.target.value===types.LOWEST_TO_HIGHEST){\r\n     \r\n        return p[1]\r\n    }\r\n    else if(e.target.value===types.HIGHEST_TO_LOWEST){\r\n        return p[2]\r\n    }\r\n    else return p[0]\r\n}\r\n\r\nconst getSortProduct=(e,p)=>({\r\n type:'SELECT_TYPE',\r\n selectChange:e.target.value,\r\navaiProducts:p\r\n})\r\n\r\nconst resolveSize=(size,selectSize)=>{\r\n    var initsize=[];\r\n    if(selectSize.length==0){\r\n        initsize.push(size);\r\n        return initsize;\r\n    }\r\n else{\r\n for(var i=0;i<selectSize.length;i++){\r\n     if(size!==selectSize[i]){\r\n         initsize.push(selectSize[i])\r\n     }\r\n }\r\n return initsize;\r\n }\r\n}\r\n\r\nconst getSelectSize=(s)=>({\r\n    type:types.SELECT_SIZE,\r\n    selectSize:s\r\n})\r\n\r\nexport const addSize=(size,selectSize)=>dispatch=>{\r\n  dispatch(getSelectSize(size,resolveSize(size,selectSize)))\r\n}\r\nexport const onChangedSort=(e,avaiProducts)=>dispatch=>{\r\n   dispatch(getSortProduct(e,getAvailPrdct(e,avaiProducts)))\r\n}\r\n\r\nconst toCart=(cartProduct,products)=>({\r\n    type:types.ADD_TO_CART,\r\n    cartProduct,\r\n    currentInventory:--cartProduct.inventory,\r\n    products,\r\n  \r\n    \r\n    \r\n})\r\n\r\nexport const addToCart=(cartProduct,products)=>dispatch=>{\r\n   dispatch(toCart(cartProduct,products))\r\n}"]},"metadata":{},"sourceType":"module"}