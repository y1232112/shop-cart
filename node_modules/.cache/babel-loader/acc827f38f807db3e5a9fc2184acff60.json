{"ast":null,"code":"import * as types from '../constants/actionTypes';\nimport shop from '../apis/shop';\n\nconst receiveSize = size => ({\n  type: types.RECEIVE_SIZE,\n  size\n});\n\nexport const getAllSize = () => dispatch => {\n  shop.getSize(size => {\n    dispatch(receiveSize(size));\n  });\n};\n\nconst receiveProducts = products => ({\n  type: types.RECEIVE_PRODUCTS,\n  products\n});\n\nexport const getAllProducts = () => dispatch => {\n  shop.getProducts(products => {\n    dispatch(receiveProducts(products));\n  });\n};\n\nconst getSortProduct = (S, avaiProduct) => {\n  if (S == types.SELECT) {\n    return {\n      type: types.SELECT,\n      avaiProduct\n    };\n  } else if (S == types.HIGHEST_TO_LOWEST) {\n    return {\n      type: types.HIGHEST_TO_LOWEST,\n      avaiProduct\n    };\n  } else return {\n    type: types.LOWEST_TO_HIGHEST,\n    avaiProduct\n  };\n};\n\nexport const onChangedSort = (S, avaiProduct) => dispatch => {\n  dispatch(getSortProduct(S, avaiProduct));\n};\n\nconst toCart = (cartProduct, products) => ({\n  type: types.ADD_TO_CART,\n  cartProduct,\n  currentInventory: --cartProduct.inventory,\n  products\n});\n\nexport const addToCart = (cartProduct, products) => dispatch => {\n  dispatch(toCart(cartProduct, products));\n};","map":{"version":3,"sources":["E:/shopping-cart-app/src/actions/index.js"],"names":["types","shop","receiveSize","size","type","RECEIVE_SIZE","getAllSize","dispatch","getSize","receiveProducts","products","RECEIVE_PRODUCTS","getAllProducts","getProducts","getSortProduct","S","avaiProduct","SELECT","HIGHEST_TO_LOWEST","LOWEST_TO_HIGHEST","onChangedSort","toCart","cartProduct","ADD_TO_CART","currentInventory","inventory","addToCart"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AACA,OAAOC,IAAP,MAAiB,cAAjB;;AAMA,MAAMC,WAAW,GAACC,IAAI,KAAG;AACrBC,EAAAA,IAAI,EAACJ,KAAK,CAACK,YADU;AAErBF,EAAAA;AAFqB,CAAH,CAAtB;;AAIA,OAAO,MAAMG,UAAU,GAAC,MAAIC,QAAQ,IAAE;AAClCN,EAAAA,IAAI,CAACO,OAAL,CACIL,IAAI,IAAE;AACJI,IAAAA,QAAQ,CAACL,WAAW,CAACC,IAAD,CAAZ,CAAR;AACD,GAHL;AAKH,CANM;;AAOP,MAAMM,eAAe,GAACC,QAAQ,KAAG;AAC7BN,EAAAA,IAAI,EAACJ,KAAK,CAACW,gBADkB;AAE7BD,EAAAA;AAF6B,CAAH,CAA9B;;AAIA,OAAO,MAAME,cAAc,GAAC,MAAIL,QAAQ,IAAE;AACtCN,EAAAA,IAAI,CAACY,WAAL,CACIH,QAAQ,IAAE;AACNH,IAAAA,QAAQ,CAACE,eAAe,CAACC,QAAD,CAAhB,CAAR;AACH,GAHL;AAKH,CANM;;AAOP,MAAMI,cAAc,GAAC,CAACC,CAAD,EAAGC,WAAH,KAAiB;AAClC,MAAGD,CAAC,IAAEf,KAAK,CAACiB,MAAZ,EAAmB;AACpB,WAAO;AAACb,MAAAA,IAAI,EAACJ,KAAK,CAACiB,MAAZ;AAAmBD,MAAAA;AAAnB,KAAP;AACE,GAFD,MAEM,IAAGD,CAAC,IAAEf,KAAK,CAACkB,iBAAZ,EAA8B;AACpC,WAAO;AAACd,MAAAA,IAAI,EAACJ,KAAK,CAACkB,iBAAZ;AAA8BF,MAAAA;AAA9B,KAAP;AACC,GAFK,MAEA,OAAM;AAACZ,IAAAA,IAAI,EAACJ,KAAK,CAACmB,iBAAZ;AAA8BH,IAAAA;AAA9B,GAAN;AACT,CAND;;AAOA,OAAO,MAAMI,aAAa,GAAC,CAACL,CAAD,EAAGC,WAAH,KAAiBT,QAAQ,IAAE;AACnDA,EAAAA,QAAQ,CAACO,cAAc,CAACC,CAAD,EAAGC,WAAH,CAAf,CAAR;AACF,CAFM;;AAIP,MAAMK,MAAM,GAAC,CAACC,WAAD,EAAaZ,QAAb,MAAyB;AAClCN,EAAAA,IAAI,EAACJ,KAAK,CAACuB,WADuB;AAElCD,EAAAA,WAFkC;AAGlCE,EAAAA,gBAAgB,EAAC,EAAEF,WAAW,CAACG,SAHG;AAIlCf,EAAAA;AAJkC,CAAzB,CAAb;;AAUA,OAAO,MAAMgB,SAAS,GAAC,CAACJ,WAAD,EAAaZ,QAAb,KAAwBH,QAAQ,IAAE;AACtDA,EAAAA,QAAQ,CAACc,MAAM,CAACC,WAAD,EAAaZ,QAAb,CAAP,CAAR;AACF,CAFM","sourcesContent":["import * as types from '../constants/actionTypes';\r\nimport shop from '../apis/shop';\r\n\r\n\r\n\r\n\r\n\r\nconst receiveSize=size=>({\r\n    type:types.RECEIVE_SIZE,\r\n    size\r\n})\r\nexport const getAllSize=()=>dispatch=>{\r\n    shop.getSize(\r\n        size=>{\r\n          dispatch(receiveSize(size))\r\n        }\r\n    )\r\n}\r\nconst receiveProducts=products=>({\r\n    type:types.RECEIVE_PRODUCTS,\r\n    products\r\n})\r\nexport const getAllProducts=()=>dispatch=>{\r\n    shop.getProducts(\r\n        products=>{\r\n            dispatch(receiveProducts(products))\r\n        }\r\n    )\r\n}\r\nconst getSortProduct=(S,avaiProduct)=>{\r\n    if(S==types.SELECT){\r\n   return {type:types.SELECT,avaiProduct}\r\n    }else if(S==types.HIGHEST_TO_LOWEST){\r\n    return {type:types.HIGHEST_TO_LOWEST,avaiProduct}\r\n    }else return{type:types.LOWEST_TO_HIGHEST,avaiProduct}\r\n}\r\nexport const onChangedSort=(S,avaiProduct)=>dispatch=>{\r\n   dispatch(getSortProduct(S,avaiProduct))\r\n}\r\n\r\nconst toCart=(cartProduct,products)=>({\r\n    type:types.ADD_TO_CART,\r\n    cartProduct,\r\n    currentInventory:--cartProduct.inventory,\r\n    products,\r\n  \r\n    \r\n    \r\n})\r\n\r\nexport const addToCart=(cartProduct,products)=>dispatch=>{\r\n   dispatch(toCart(cartProduct,products))\r\n}"]},"metadata":{},"sourceType":"module"}