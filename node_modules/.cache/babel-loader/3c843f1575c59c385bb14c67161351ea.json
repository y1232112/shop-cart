{"ast":null,"code":"import * as types from '../constants/actionTypes';\nimport shop from '../apis/shop';\n\nconst receiveProducts = products => ({\n  type: types.RECEIVE_PRODUCTS,\n  products\n});\n\nexport const getAllProducts = () => dispatch => {\n  shop.getProducts(products => {\n    dispatch(receiveProducts(products));\n  });\n};\n\nconst getAvailPrdct = (e, p, ps) => {\n  if (e.target.value === types.SELECT) {\n    return [p[0], ps[0]];\n  } else if (e.target.value === types.LOWEST_TO_HIGHEST) {\n    return [p[1], ps[1]];\n  } else if (e.target.value === types.HIGHEST_TO_LOWEST) {\n    return [p[2], ps[2]];\n  } else return [p[0], ps[0]];\n};\n\nconst getSortProduct = (e, p) => ({\n  type: 'SELECT_TYPE',\n  selectChange: e.target.value,\n  avaiProducts: p[0],\n  products: p[1]\n});\n\nconst resolveSize = (size, selectSize) => {\n  if (selectSize.length == 0) {\n    var initsize = [];\n    initsize.push(size);\n    return initsize;\n  } else {\n    var initsize = [size];\n    var m = 0;\n    var p = initsize.concat(selectSize);\n\n    for (var k = 0; k < p.length; k++) {\n      if (p[k] == size) {\n        m++;\n      }\n    }\n\n    if (m == 2) {\n      var o = [];\n\n      for (var g = 0; g < p.length; g++) {\n        if (p[g] !== size) {\n          o.push(p[g]);\n        }\n      }\n\n      return o;\n    } else {\n      return p;\n    }\n  }\n};\n\nconst getSelectSize = (s, p) => ({\n  type: types.SELECT_SIZE,\n  selectSize: s,\n  avaiProducts: p\n});\n\nconst getSelctSizPrdcts = (arr, products) => {\n  var ap = [];\n  var temp = [];\n  var pt = products.map(mp => mp.availableSizes);\n\n  for (var i = 0; i < arr.length; i++) {\n    for (var ti = 0; ti < pt.length; ti++) {\n      for (var ai = 0; ai < pt[ti].length; ai++) {\n        if (pt[ti][ai] == arr[i]) {\n          ap.push(products[ti]);\n        }\n      }\n    }\n  }\n\n  ap = new Set(ap);\n  ap = Array.from(ap);\n  return ap;\n};\n\nexport const addSize = (size, selectSize, products) => dispatch => {\n  dispatch(getSelectSize(resolveSize(size, selectSize), getSelctSizPrdcts(resolveSize(size, selectSize), products)));\n};\nexport const onChangedSort = (e, avaiProducts, products) => dispatch => {\n  dispatch(getSortProduct(e, getAvailPrdct(e, avaiProducts, products)));\n};\n\nconst toCart = (cartProduct, products) => ({\n  type: types.ADD_TO_CART,\n  cartProduct,\n  currentInventory: --cartProduct.inventory,\n  products\n});\n\nexport const addToCart = (cartProduct, products) => dispatch => {\n  dispatch(toCart(cartProduct, products));\n};","map":{"version":3,"sources":["E:/shopping-cart-app/src/actions/index.js"],"names":["types","shop","receiveProducts","products","type","RECEIVE_PRODUCTS","getAllProducts","dispatch","getProducts","getAvailPrdct","e","p","ps","target","value","SELECT","LOWEST_TO_HIGHEST","HIGHEST_TO_LOWEST","getSortProduct","selectChange","avaiProducts","resolveSize","size","selectSize","length","initsize","push","m","concat","k","o","g","getSelectSize","s","SELECT_SIZE","getSelctSizPrdcts","arr","ap","temp","pt","map","mp","availableSizes","i","ti","ai","Set","Array","from","addSize","onChangedSort","toCart","cartProduct","ADD_TO_CART","currentInventory","inventory","addToCart"],"mappings":"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","sourcesContent":["import * as types from '../constants/actionTypes';\r\nimport shop from '../apis/shop';\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst receiveProducts=products=>({\r\n    type:types.RECEIVE_PRODUCTS,\r\n    products\r\n})\r\nexport const getAllProducts=()=>dispatch=>{\r\n    shop.getProducts(\r\n        products=>{\r\n            dispatch(receiveProducts(products))\r\n        }\r\n    )\r\n}\r\n\r\n const getAvailPrdct=(e,p,ps)=>{\r\n    if(e.target.value===types.SELECT){\r\n\r\n   return [p[0],ps[0]]\r\n    }\r\n   else if(e.target.value===types.LOWEST_TO_HIGHEST){\r\n     \r\n        return [p[1],ps[1]]\r\n    }\r\n    else if(e.target.value===types.HIGHEST_TO_LOWEST){\r\n        return [p[2],ps[2]]\r\n    }\r\n    else return [p[0],ps[0]]\r\n}\r\n\r\nconst getSortProduct=(e,p)=>({\r\n type:'SELECT_TYPE',\r\n selectChange:e.target.value,\r\navaiProducts:p[0],\r\nproducts:p[1]\r\n})\r\n\r\nconst resolveSize=(size,selectSize)=>{\r\n   \r\n    if(selectSize.length==0){\r\n        var initsize=[];\r\n        initsize.push(size);\r\n        return initsize;\r\n    }else{\r\n        var initsize=[size];\r\n        var m=0;\r\n       var p=initsize.concat(selectSize)\r\n       for(var k=0;k<p.length;k++){\r\n          if(p[k]==size){\r\n              m++\r\n          }\r\n       }\r\n      if(m==2){\r\n          var o=[];\r\n          for(var g=0;g<p.length;g++){\r\n              if(p[g]!==size){\r\n                  o.push(p[g])\r\n              }\r\n          }\r\n          return o\r\n      }\r\n      else\r\n           {\r\n          \r\n           return p\r\n           }\r\n    }\r\n   \r\n\r\n}\r\n\r\nconst getSelectSize=(s,p)=>({\r\n    type:types.SELECT_SIZE,\r\n    selectSize:s,\r\n    avaiProducts:p\r\n})\r\nconst getSelctSizPrdcts=(arr,products)=>{\r\n    var ap=[];\r\n    var temp=[];\r\n\r\n    var pt=products.map(mp=>mp.availableSizes);\r\n    for(var i=0;i<arr.length;i++){\r\n          for(var ti=0;ti<pt.length;ti++){\r\n            for(var ai=0;ai<pt[ti].length;ai++){\r\n                if(pt[ti][ai]==arr[i]){\r\n                    ap.push(products[ti])\r\n                }\r\n            }\r\n          }\r\n              \r\n          \r\n    }\r\n     \r\n    \r\n    ap=new Set(ap);\r\n    ap=Array.from(ap) ;\r\n    return ap;\r\n}\r\nexport const addSize=(size,selectSize,products)=>dispatch=>{\r\n  dispatch(\r\n      getSelectSize(\r\n                       resolveSize(size,selectSize),\r\n                       getSelctSizPrdcts(resolveSize(size,selectSize),products)\r\n                    )\r\n      )\r\n}\r\nexport const onChangedSort=(e,avaiProducts,products)=>dispatch=>{\r\n   dispatch(getSortProduct(e,getAvailPrdct(e,avaiProducts,products)))\r\n}\r\n\r\nconst toCart=(cartProduct,products)=>({\r\n    type:types.ADD_TO_CART,\r\n    cartProduct,\r\n    currentInventory:--cartProduct.inventory,\r\n    products,\r\n  \r\n    \r\n    \r\n})\r\n\r\nexport const addToCart=(cartProduct,products)=>dispatch=>{\r\n   dispatch(toCart(cartProduct,products))\r\n}"]},"metadata":{},"sourceType":"module"}