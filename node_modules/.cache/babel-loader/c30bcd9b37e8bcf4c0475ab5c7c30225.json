{"ast":null,"code":"import React from'react';import ReactDOM from'react-dom';import'./index.css';import App from'./containers/App';import*as serviceWorker from'./serviceWorker';import thunk from'redux-thunk';import{createLogger}from'redux-logger';import reducer from'./reducers';import{getAllProducts}from'./actions';import{createStore,applyMiddleware}from'redux';import{Provider}from'react-redux';var middleware=[thunk];if(process.env.NODE_ENV!=='production'){middleware.push(createLogger());}export var store=createStore(reducer,applyMiddleware.apply(void 0,middleware));store.dispatch(getAllProducts());ReactDOM.render(React.createElement(Provider,{store:store},React.createElement(App,null)),document.getElementById('root'));serviceWorker.unregister();","map":{"version":3,"sources":["E:/shop-cart/src/index.js"],"names":["React","ReactDOM","App","serviceWorker","thunk","createLogger","reducer","getAllProducts","createStore","applyMiddleware","Provider","middleware","process","env","NODE_ENV","push","store","dispatch","render","document","getElementById","unregister"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,QAAP,KAAqB,WAArB,CACA,MAAO,aAAP,CACA,MAAOC,CAAAA,GAAP,KAAgB,kBAAhB,CACA,MAAO,GAAKC,CAAAA,aAAZ,KAA+B,iBAA/B,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,YAAT,KAA6B,cAA7B,CACA,MAAOC,CAAAA,OAAP,KAAoB,YAApB,CACA,OAAQC,cAAR,KAA6B,WAA7B,CACA,OAASC,WAAT,CAAsBC,eAAtB,KAA6C,OAA7C,CACA,OAASC,QAAT,KAAyB,aAAzB,CAEA,GAAMC,CAAAA,UAAU,CAAG,CAAEP,KAAF,CAAnB,CACA,GAAIQ,OAAO,CAACC,GAAR,CAAYC,QAAZ,GAAyB,YAA7B,CAA2C,CACzCH,UAAU,CAACI,IAAX,CAAgBV,YAAY,EAA5B,EACD,CACD,MAAO,IAAMW,CAAAA,KAAK,CAAGR,WAAW,CAC5BF,OAD4B,CAE5BG,eAAe,MAAf,QAAmBE,UAAnB,CAF4B,CAAzB,CAILK,KAAK,CAACC,QAAN,CAAeV,cAAc,EAA7B,EAGFN,QAAQ,CAACiB,MAAT,CACM,oBAAC,QAAD,EAAU,KAAK,CAAEF,KAAjB,EACA,oBAAC,GAAD,MADA,CADN,CAGmBG,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAHnB,EAMAjB,aAAa,CAACkB,UAAd","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\nimport reducer from './reducers';\nimport {getAllProducts} from './actions';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\n\nconst middleware = [ thunk ];\nif (process.env.NODE_ENV !== 'production') {\n  middleware.push(createLogger());\n}\nexport const store = createStore(\n    reducer,\n    applyMiddleware(...middleware)\n  )\n  store.dispatch(getAllProducts())\n\n \nReactDOM.render(\n      <Provider store={store}>\n      <App />\n      </Provider>, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"]},"metadata":{},"sourceType":"module"}